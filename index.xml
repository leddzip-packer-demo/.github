<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Packer experiment / notes</title><link>https://leddzip-packer-demo.github.io/</link><description>Recent content on Packer experiment / notes</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 06 Feb 2023 23:29:20 +0100</lastBuildDate><atom:link href="https://leddzip-packer-demo.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Day 5</title><link>https://leddzip-packer-demo.github.io/journal/day-5/</link><pubDate>Mon, 06 Feb 2023 23:29:20 +0100</pubDate><guid>https://leddzip-packer-demo.github.io/journal/day-5/</guid><description>Content of the day https://github.com/leddzip-packer-demo/packer-ami-creation
This is the kinda final mandatory step required for my use case. Basically, being able to provision the AMI so it have the application that I need.
I am limiting myself (for the exercise) in installing docker and docker-compose as well as uploading one file/folder to a specific location in the new AMI. However, the exercises show case how to create a base AMI image to run an application (using systemctl to register and start a service).</description></item><item><title>Day 4</title><link>https://leddzip-packer-demo.github.io/journal/day-4/</link><pubDate>Sun, 05 Feb 2023 23:12:00 +0100</pubDate><guid>https://leddzip-packer-demo.github.io/journal/day-4/</guid><description>Content of the day No lessons for today, but two things:
creation of a docker image with packer and aws-cli testing this image with a base packer.json file to test simple (no-provisioning) AMI creation docker packer aws https://github.com/leddzip/docker-packer-aws
This is based on a previous work docker with terraform and aws cli. Since both terraform and packer are from the same provider, it&amp;rsquo;s quite easy to port one work to the other</description></item><item><title>Day 3</title><link>https://leddzip-packer-demo.github.io/journal/day-3/</link><pubDate>Thu, 02 Feb 2023 22:33:49 +0100</pubDate><guid>https://leddzip-packer-demo.github.io/journal/day-3/</guid><description>Content of the day This lesson is on communicator.
Since I am using linux, or at least *nix based system, I don&amp;rsquo;t need to provide a communicator in the builder section. However, I do have to provide some additional information so that packer can ssh inside the ec2 that will hold the base AMI.
ssh_username: here will be ubuntu. Depends on the base AMI used. Should refer to the doc of the AMI used to validate the packer file (works only with json file for now, does not work with hcl files): packer validate packer.</description></item><item><title>Day 2</title><link>https://leddzip-packer-demo.github.io/journal/day-2/</link><pubDate>Wed, 01 Feb 2023 22:56:52 +0100</pubDate><guid>https://leddzip-packer-demo.github.io/journal/day-2/</guid><description>Content of the day Learning packer.
reference commit
For now, I follow along one tuto. It starts by defining a builder, the base setup and configuration needed for packer to build the ami that I want to create. The content of this builder is mostly to select what will be the base images, the instance that will run the base image to modify and some connection setup.
format for now, the tuto is using json, I will change it to hcl very soon since I don&amp;rsquo;t like using json for such configuration.</description></item><item><title>Day 1</title><link>https://leddzip-packer-demo.github.io/journal/day-1/</link><pubDate>Tue, 31 Jan 2023 21:22:25 +0100</pubDate><guid>https://leddzip-packer-demo.github.io/journal/day-1/</guid><description>The experiment is to work with packer to create a bew base AMI.
What I have in hand: a bit of experience with terraform and HCL a bit of experience with AWS some practical experience with devops practices What am I targeting: a fully functional AMI with docker and docker-compose installed, build with packer once the AMI is created, use it to create an EC2 with terraform all build should be done through github action (I use heavily CircleCI in most of my projects, so let&amp;rsquo;s try something else once) a documentation of my progress using hugo (for fun and to learn as muck as possible along the way) Content of the day; Mostly setup of the projects and the different repos to hold the work on this experiment.</description></item></channel></rss>